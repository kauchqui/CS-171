import java.util.*;
public class BST<Key extends Comparable <String>, Integer, String>{
	private Node root;
		
		private class Node
		{
			
			private String key;
			private int val;
			private String location;
			private Node left, right; 
		
			public Node(String key, int value, String loc)
			{
				this.key = key;
				this.val = value;
				this.location = loc;
			}
		public int get(String key) 
		{
			return get(root, key);
		}
		private int get(Node x, String key) 
		{
			 if (x == null) return 0;
			 int cmp = key.compareTo(x.key);
			 if (cmp < 0) return get(x.left, key);
			 else if (cmp > 0) return get(x.right, key);
			 else return x.val;
		}

		public void put(String key, int val, String loc)
		{
			root = put(root, key, val, loc);
		}
		private Node put(Node x, String key, int val, String loc)
		{
			if(x == null) return new Node(key, val, loc);
			{
				int compare = key.compareTo(x.key);
				if(compare < 0 )
				{
					x.left = put(x.left, key, val, loc);
				}
				else if(compare > 0)
				{
					x.right = put(x.right, key, val, loc);
				}
				else if (compare == 0)
				{
					x.val = val;
					x.location = loc;
				}
				return x;
			}
		}
	
	}
}
